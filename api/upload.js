export default async function handler(req, res) {
  if (req.method !== "POST") {
    return res.status(405).json({ message: "Method not allowed" });
  }

  try {
    const data = req.body;
    const postId = data.id; // use the ID generated by frontend
    const filename = `post-${postId}.json`;

    const gistId = process.env.GIST_ID;
    if (!gistId) {
      return res.status(500).json({ message: "Missing GIST_ID in environment variables" });
    }
    if (!process.env.GITHUB_TOKEN) {
      return res.status(500).json({ message: "Missing GITHUB_TOKEN in environment variables" });
    }

    const payload = {
      files: {
        [filename]: {
          content: JSON.stringify(data, null, 2)
        }
      }
    };

    const response = await fetch(`https://api.github.com/gists/${gistId}`, {
      method: "PATCH",
      headers: {
        "Authorization": `token ${process.env.GITHUB_TOKEN}`,
        "Content-Type": "application/json"
      },
      body: JSON.stringify(payload)
    });

    const result = await response.json();

    if (!response.ok) {
      return res.status(response.status).json({ message: "GitHub API error", error: result });
    }

    return res.status(200).json({
      message: "Post added successfully!",
      gistUrl: result.html_url,
      postId: postId
    });
  } catch (error) {
    return res.status(500).json({ message: "Server error", error: error.message });
  }
}
